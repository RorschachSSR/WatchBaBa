
====== ANOVA (Within-Subjects Design) ======

Descriptives:
───────────────────────────────────────
 "lvl" "noval" "split"  Mean    S.D.  n
───────────────────────────────────────
  lvl1  noval1  split0 0.798 (0.108) 19
  lvl1  noval1  split1 0.790 (0.101) 19
  lvl1  noval2  split0 0.737 (0.112) 19
  lvl1  noval2  split1 0.746 (0.110) 19
  lvl1  noval3  split0 0.700 (0.160) 19
  lvl1  noval3  split1 0.741 (0.106) 19
  lvl2  noval1  split0 0.885 (0.090) 19
  lvl2  noval1  split1 0.852 (0.112) 19
  lvl2  noval2  split0 0.909 (0.110) 19
  lvl2  noval2  split1 0.828 (0.154) 19
  lvl2  noval3  split0 0.881 (0.097) 19
  lvl2  noval3  split1 0.807 (0.121) 19
  lvl3  noval1  split0 0.984 (0.035) 19
  lvl3  noval1  split1 0.924 (0.095) 19
  lvl3  noval2  split0 0.931 (0.216) 19
  lvl3  noval2  split1 0.820 (0.123) 19
  lvl3  noval3  split0 0.939 (0.188) 19
  lvl3  noval3  split1 0.870 (0.131) 19
  lvl4  noval1  split0 0.819 (0.107) 19
  lvl4  noval1  split1 0.791 (0.105) 19
  lvl4  noval2  split0 0.838 (0.083) 19
  lvl4  noval2  split1 0.773 (0.128) 19
  lvl4  noval3  split0 0.705 (0.097) 19
  lvl4  noval3  split1 0.748 (0.086) 19
  lvl5  noval1  split0 0.769 (0.131) 19
  lvl5  noval1  split1 0.816 (0.118) 19
  lvl5  noval2  split0 0.753 (0.126) 19
  lvl5  noval2  split1 0.764 (0.092) 19
  lvl5  noval3  split0 0.708 (0.146) 19
  lvl5  noval3  split1 0.765 (0.127) 19
───────────────────────────────────────
Total sample size: N = 19

ANOVA Table:
Dependent variable(s):      lvl1noval1split0, lvl1noval2split0, lvl1noval3split0, lvl2noval1split0, lvl2noval2split0, lvl2noval3split0, lvl3noval1split0, lvl3noval2split0, lvl3noval3split0, lvl4noval1split0, lvl4noval2split0, lvl4noval3split0, lvl5noval1split0, lvl5noval2split0, lvl5noval3split0, lvl1noval1split1, lvl1noval2split1, lvl1noval3split1, lvl2noval1split1, lvl2noval2split1, lvl2noval3split1, lvl3noval1split1, lvl3noval2split1, lvl3noval3split1, lvl4noval1split1, lvl4noval2split1, lvl4noval3split1, lvl5noval1split1, lvl5noval2split1, lvl5noval3split1
Between-subjects factor(s): –
Within-subjects factor(s):  lvl, noval, split
Covariate(s):               –
───────────────────────────────────────────────────────────────────────────────────────
                        MS   MSE   df1    df2      F     p     η²p [90% CI of η²p]  η²G
───────────────────────────────────────────────────────────────────────────────────────
lvl                  0.734 0.017 3.005 54.093 42.566 <.001 ***   .703 [.585, .774] .216
noval                0.184 0.016 1.660 29.877 11.757 <.001 ***   .395 [.160, .564] .037
split                0.065 0.020 1.000 18.000  3.258  .088 .     .153 [.000, .405] .008
lvl * noval          0.034 0.018 4.595 82.718  1.912  .107       .096 [.000, .193] .019
lvl * split          0.108 0.023 2.625 47.258  4.617  .009 **    .204 [.036, .348] .034
noval * split        0.029 0.013 1.877 33.787  2.275  .121       .112 [.000, .276] .007
lvl * noval * split  0.013 0.024 4.069 73.235  0.532  .716       .029 [.000, .064] .006
───────────────────────────────────────────────────────────────────────────────────────
Sphericity correction method: GG (Greenhouse-Geisser)
MSE = mean square error (the residual variance of the linear model)
η²p = partial eta-squared = SS / (SS + SSE) = F * df1 / (F * df1 + df2)
ω²p = partial omega-squared = (F - 1) * df1 / (F * df1 + df2 + 1)
η²G = generalized eta-squared (see Olejnik & Algina, 2003)
Cohen’s f² = η²p / (1 - η²p)

Levene’s Test for Homogeneity of Variance:
No between-subjects factors. No need to do the Levene’s test.

Mauchly’s Test of Sphericity:
──────────────────────────────────────────
                     Mauchly's W     p    
──────────────────────────────────────────
lvl                       0.4679  .191    
noval                     0.7951  .142    
lvl * noval               0.0320  .039 *  
lvl * split               0.2384  .005 ** 
noval * split             0.9345  .562    
lvl * noval * split       0.0236  .015 *  
──────────────────────────────────────────

------ EMMEANS (effect = "lvl") ------

Joint Tests of "lvl":
─────────────────────────────────────────────────────────────────
      Effect "split" df1 df2      F     p     η²p [90% CI of η²p]
─────────────────────────────────────────────────────────────────
 noval        split0   2  18  9.147  .002 **    .504 [.186, .678]
 noval        split1   2  18  4.895  .020 *     .352 [.044, .563]
 lvl          split0   4  18 19.230 <.001 ***   .810 [.631, .879]
 lvl          split1   4  18  6.679  .002 **    .597 [.255, .734]
 noval * lvl  split0   8  18  4.623  .003 **    .673 [.293, .776]
 noval * lvl  split1   8  18  0.764  .638       .253 [.000, .327]
─────────────────────────────────────────────────────────────────
Note. Simple effects of repeated measures with 3 or more levels
are different from the results obtained with SPSS MANOVA syntax.

Multivariate Tests of "lvl":
───────────────────────────────────────────────────────────────────
               Pillai’s trace Hypoth. df Error df Exact F     p    
───────────────────────────────────────────────────────────────────
split0: "lvl"           0.810      4.000   15.000  16.025 <.001 ***
split1: "lvl"           0.597      4.000   15.000   5.566  .006 ** 
───────────────────────────────────────────────────────────────────
Note. Identical to the results obtained with SPSS GLM EMMEANS syntax.

Estimated Marginal Means of "lvl":
────────────────────────────────────────────
 "lvl" "split" Mean [95% CI of Mean]    S.E.
────────────────────────────────────────────
  lvl1  split0  0.745 [0.697, 0.793] (0.023)
  lvl2  split0  0.892 [0.854, 0.929] (0.018)
  lvl3  split0  0.951 [0.908, 0.994] (0.021)
  lvl4  split0  0.787 [0.749, 0.826] (0.018)
  lvl5  split0  0.743 [0.692, 0.795] (0.025)
  lvl1  split1  0.759 [0.720, 0.798] (0.019)
  lvl2  split1  0.829 [0.795, 0.863] (0.016)
  lvl3  split1  0.871 [0.836, 0.907] (0.017)
  lvl4  split1  0.771 [0.732, 0.809] (0.018)
  lvl5  split1  0.782 [0.744, 0.819] (0.018)
────────────────────────────────────────────

Pairwise Comparisons of "lvl":
─────────────────────────────────────────────────────────────────────────────────
    Contrast "split" Estimate    S.E. df      t     p     Cohen’s d [95% CI of d]
─────────────────────────────────────────────────────────────────────────────────
 lvl2 - lvl1  split0    0.147 (0.022) 18  6.539 <.001 ***  0.926 [ 0.473,  1.379]
 lvl3 - lvl1  split0    0.206 (0.028) 18  7.256 <.001 ***  1.302 [ 0.729,  1.876]
 lvl3 - lvl2  split0    0.060 (0.028) 18  2.090  .511      0.376 [-0.199,  0.952]
 lvl4 - lvl1  split0    0.042 (0.014) 18  2.964  .083 .    0.267 [-0.021,  0.554]
 lvl4 - lvl2  split0   -0.104 (0.016) 18 -6.373 <.001 *** -0.659 [-0.990, -0.329]
 lvl4 - lvl3  split0   -0.164 (0.027) 18 -6.006 <.001 *** -1.036 [-1.587, -0.485]
 lvl5 - lvl1  split0   -0.002 (0.018) 18 -0.116 1.000     -0.013 [-0.384,  0.357]
 lvl5 - lvl2  split0   -0.149 (0.022) 18 -6.743 <.001 *** -0.939 [-1.385, -0.494]
 lvl5 - lvl3  split0   -0.208 (0.035) 18 -5.945 <.001 *** -1.316 [-2.023, -0.608]
 lvl5 - lvl4  split0   -0.044 (0.018) 18 -2.460  .242     -0.280 [-0.644,  0.084]
 lvl2 - lvl1  split1    0.070 (0.022) 18  3.242  .045 *    0.445 [ 0.006,  0.883]
 lvl3 - lvl1  split1    0.113 (0.023) 18  4.925  .001 **   0.711 [ 0.250,  1.173]
 lvl3 - lvl2  split1    0.042 (0.020) 18  2.140  .463      0.266 [-0.132,  0.665]
 lvl4 - lvl1  split1    0.012 (0.015) 18  0.770 1.000      0.075 [-0.237,  0.387]
 lvl4 - lvl2  split1   -0.058 (0.018) 18 -3.203  .049 *   -0.370 [-0.739, -0.001]
 lvl4 - lvl3  split1   -0.101 (0.022) 18 -4.507  .003 **  -0.636 [-1.087, -0.185]
 lvl5 - lvl1  split1    0.023 (0.014) 18  1.606 1.000      0.145 [-0.143,  0.433]
 lvl5 - lvl2  split1   -0.047 (0.025) 18 -1.921  .707     -0.300 [-0.799,  0.199]
 lvl5 - lvl3  split1   -0.090 (0.022) 18 -4.089  .007 **  -0.566 [-1.009, -0.124]
 lvl5 - lvl4  split1    0.011 (0.022) 18  0.499 1.000      0.070 [-0.377,  0.516]
─────────────────────────────────────────────────────────────────────────────────
Pooled SD for computing Cohen’s d: 0.158
Results are averaged over the levels of: noval
P-value adjustment: Bonferroni method for 10 tests.

Disclaimer:
By default, pooled SD is Root Mean Square Error (RMSE).
There is much disagreement on how to compute Cohen’s d.
You are completely responsible for setting `sd.pooled`.
You might also use `effectsize::t_to_d()` to compute d.

------ EMMEANS (effect = "split") ------

Joint Tests of "split":
─────────────────────────────────────────────────────────────────
        Effect "lvl" df1 df2      F     p     η²p [90% CI of η²p]
─────────────────────────────────────────────────────────────────
 split          lvl1   1  18  0.360  .556       .020 [.000, .215]
 split          lvl2   1  18  7.622  .013 *     .297 [.044, .533]
 split          lvl3   1  18  7.810  .012 *     .303 [.047, .537]
 split          lvl4   1  18  1.068  .315       .056 [.000, .286]
 split          lvl5   1  18  1.959  .179       .098 [.000, .344]
 noval          lvl1   2  18 11.336 <.001 ***   .557 [.250, .715]
 noval          lvl2   2  18  0.530  .598       .056 [.000, .117]
 noval          lvl3   2  18  4.394  .028 *     .328 [.027, .544]
 noval          lvl4   2  18 24.466 <.001 ***   .731 [.508, .830]
 noval          lvl5   2  18  1.676  .215       .157 [.000, .380]
 split * noval  lvl1   2  18  0.444  .648       .047 [.000, .215]
 split * noval  lvl2   2  18  1.197  .325       .117 [.000, .332]
 split * noval  lvl3   2  18  0.317  .732       .034 [.000, .181]
 split * noval  lvl4   2  18  4.010  .036 *     .308 [.014, .527]
 split * noval  lvl5   2  18  1.187  .328       .117 [.000, .331]
─────────────────────────────────────────────────────────────────
Note. Simple effects of repeated measures with 3 or more levels
are different from the results obtained with SPSS MANOVA syntax.

Multivariate Tests of "split":
───────────────────────────────────────────────────────────────────
               Pillai’s trace Hypoth. df Error df Exact F     p    
───────────────────────────────────────────────────────────────────
lvl1: "split"           0.020      1.000   18.000   0.360  .556    
lvl2: "split"           0.297      1.000   18.000   7.622  .013 *  
lvl3: "split"           0.303      1.000   18.000   7.810  .012 *  
lvl4: "split"           0.056      1.000   18.000   1.068  .315    
lvl5: "split"           0.098      1.000   18.000   1.959  .179    
───────────────────────────────────────────────────────────────────
Note. Identical to the results obtained with SPSS GLM EMMEANS syntax.

Estimated Marginal Means of "split":
────────────────────────────────────────────
 "split" "lvl" Mean [95% CI of Mean]    S.E.
────────────────────────────────────────────
  split0  lvl1  0.745 [0.697, 0.793] (0.023)
  split1  lvl1  0.759 [0.720, 0.798] (0.019)
  split0  lvl2  0.892 [0.854, 0.929] (0.018)
  split1  lvl2  0.829 [0.795, 0.863] (0.016)
  split0  lvl3  0.951 [0.908, 0.994] (0.021)
  split1  lvl3  0.871 [0.836, 0.907] (0.017)
  split0  lvl4  0.787 [0.749, 0.826] (0.018)
  split1  lvl4  0.771 [0.732, 0.809] (0.018)
  split0  lvl5  0.743 [0.692, 0.795] (0.025)
  split1  lvl5  0.782 [0.744, 0.819] (0.018)
────────────────────────────────────────────

Pairwise Comparisons of "split":
───────────────────────────────────────────────────────────────────────────────────
        Contrast "lvl" Estimate    S.E. df      t     p     Cohen’s d [95% CI of d]
───────────────────────────────────────────────────────────────────────────────────
 split1 - split0  lvl1    0.014 (0.023) 18  0.600  .556      0.086 [-0.214,  0.385]
 split1 - split0  lvl2   -0.063 (0.023) 18 -2.761  .013 *   -0.396 [-0.697, -0.095]
 split1 - split0  lvl3   -0.080 (0.029) 18 -2.795  .012 *   -0.505 [-0.885, -0.125]
 split1 - split0  lvl4   -0.017 (0.016) 18 -1.033  .315     -0.106 [-0.321,  0.109]
 split1 - split0  lvl5    0.039 (0.028) 18  1.400  .179      0.244 [-0.122,  0.610]
───────────────────────────────────────────────────────────────────────────────────
Pooled SD for computing Cohen’s d: 0.158
Results are averaged over the levels of: noval
No need to adjust p values.

Disclaimer:
By default, pooled SD is Root Mean Square Error (RMSE).
There is much disagreement on how to compute Cohen’s d.
You are completely responsible for setting `sd.pooled`.
You might also use `effectsize::t_to_d()` to compute d.

